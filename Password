#include <iostream>
#include <ctime>

int main()
{
	setlocale(LC_ALL, "ru");
	
	std::cout << "    *** Генератор паролей. ***\n\n";

	srand(time(0));                              // Началльное число для генерации случайных чисел;

	const size_t simple{ 6 },                      // Длина простого пароля;
		complex{ 10 },                    // Длина сложного пароля;
		strong{ 15 };                     // Длина надёжного пароля;  
	while (1)                                     // Основной цикл программыЖ
	{
		char choice;                             // Переменная для выбора пользователя;
		while (1)                                // Валидация ввода;
		{
			std::cout << "Выберете сложность пароля (1 - простой, 2 - сложный, "
				"3 - надёжный),\n"
				"или введите 0 для завершения программы: ";
			std::cin >> choice;
			if (choice == '0') break;

			if (choice == '0' || choice == '1' || choice == '2' || choice == '3')
				break;
			else
			{
				std::cout << "Ошибка ввода! Попробуйте ещё раз.\n";
				std::cin.ignore(32767, '\n');
			}
		}
		if (choice == '0') break;                 // Завершение программы;

		size_t complexity;                        // Для записи выбранной сложности пароля;
		switch (choice)
		{
		case '1': complexity = simple;  break;
		case '2': complexity = complex; break;
		case '3': complexity = strong;  break;
		default: break;
		}

		std::string password{ "" };                 // Переменная для пароля;
		for (size_t iii{ 0 }; iii < complexity; ++iii)    // Создаём пароль;
		{
			if (complexity == strong)             // В надёжном пароле используем все символы с
			{                                     //  кодом от 32 до 126 включительно;
				password += static_cast<char>(32 + rand() % (127 - 32));  // Генерируем число,
			}                                     //  преобразуем его в символ и добавляем к строке;
			else
			{
				size_t start{ 40 };                 // Нижний предел для генерации сложного пароля;
				if (complexity == simple) start = 48;   // Устанавливаем наименьшее число
														//   генерации, если выбран простой пароль; 
				size_t num{ start + rand() % (110 - start) }; // Генерируем число в заданных пределах;
				char temp;                              // Временная переменная для символа; 
				if (num <= 47)                  // Блок с набором знаков для сложного пароля;  
				{
					switch (num)
					{
					case 40: temp = '!'; break;
					case 41: temp = '@'; break;
					case 42: temp = '#'; break;
					case 43: temp = '$'; break;
					case 44: temp = '%'; break;
					case 45: temp = '&'; break;
					case 46: temp = '?'; break;
					case 47: temp = '_'; break;
					default: break;
					}
				}
				else if (num >= 58 && num <= 83) temp = num + 7;   // Смещаемся в область заглавных букв;
				else if (num > 83) temp = num + 13;              // Смещаемся в область строчных букв;
				else temp = num;                             // Область цифр;

				password += temp;                            // Добавляем символ в строку;
			}
		}

		std::cout << "\nВаш пароль (внутри кавычек): \"" << password << "\"\n\n";
	}
	std::cout << "\nПрограмма завершена.\n\n";

	return 0;
}
